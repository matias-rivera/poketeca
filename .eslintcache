[{"E:\\projects\\react\\poketeca\\src\\reportWebVitals.js":"1","E:\\projects\\react\\poketeca\\src\\App.js":"2","E:\\projects\\react\\poketeca\\src\\core\\apiCore.js":"3","E:\\projects\\react\\poketeca\\src\\index.js":"4","E:\\projects\\react\\poketeca\\src\\components\\navbar\\Navbar.js":"5","E:\\projects\\react\\poketeca\\src\\components\\navbar\\MenuItems.js":"6","E:\\projects\\react\\poketeca\\src\\components\\navbar\\Button.js":"7","E:\\projects\\react\\poketeca\\src\\components\\pokecard\\Pokecard.js":"8","E:\\projects\\react\\poketeca\\src\\screens\\HomeScreen.js":"9","E:\\projects\\react\\poketeca\\src\\components\\searchbox\\SearchBox.js":"10","E:\\projects\\react\\poketeca\\src\\screens\\MyPokemonsScreen.js":"11","E:\\projects\\react\\poketeca\\src\\screens\\ProfileScreen.js":"12","E:\\projects\\react\\poketeca\\src\\screens\\SearchScreen.js":"13","E:\\projects\\react\\poketeca\\src\\screens\\PokemonScreen.js":"14","E:\\projects\\react\\poketeca\\src\\screens\\MyTeamsScreen.js":"15"},{"size":362,"mtime":1606718414823,"results":"16","hashOfConfig":"17"},{"size":1049,"mtime":1607215019086,"results":"18","hashOfConfig":"17"},{"size":3307,"mtime":1607515589381,"results":"19","hashOfConfig":"17"},{"size":497,"mtime":1607127675081,"results":"20","hashOfConfig":"17"},{"size":1021,"mtime":1607194344869,"results":"21","hashOfConfig":"17"},{"size":434,"mtime":1607194374822,"results":"22","hashOfConfig":"17"},{"size":708,"mtime":1607193966340,"results":"23","hashOfConfig":"17"},{"size":4528,"mtime":1607338476138,"results":"24","hashOfConfig":"17"},{"size":2117,"mtime":1607337223496,"results":"25","hashOfConfig":"17"},{"size":894,"mtime":1607198011646,"results":"26","hashOfConfig":"17"},{"size":736,"mtime":1607191162340,"results":"27","hashOfConfig":"17"},{"size":145,"mtime":1607189617663,"results":"28","hashOfConfig":"17"},{"size":1014,"mtime":1607198099806,"results":"29","hashOfConfig":"17"},{"size":1608,"mtime":1607211307774,"results":"30","hashOfConfig":"17"},{"size":148,"mtime":1607189421501,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gmpyfm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projects\\react\\poketeca\\src\\reportWebVitals.js",[],"E:\\projects\\react\\poketeca\\src\\App.js",[],"E:\\projects\\react\\poketeca\\src\\core\\apiCore.js",[],"E:\\projects\\react\\poketeca\\src\\index.js",[],["67","68"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\Navbar.js",["69"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\MenuItems.js",[],["70","71"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\Button.js",[],"E:\\projects\\react\\poketeca\\src\\components\\pokecard\\Pokecard.js",["72","73"],"import React,{ useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Pokecard.css';\r\n\r\n\r\nconst COLORS = {\r\n    black: 'linear-gradient(90deg, rgb(112, 109, 107) 29%, rgb(71, 68, 68) 78%)',\r\n    blue: 'linear-gradient(90deg, rgb(87, 142, 230) 29%, rgb(43, 95, 238) 78%)',\r\n    brown: 'linear-gradient(90deg, rgb(218, 144, 75) 29%, rgb(202, 115, 34) 78%)',\r\n    gray: 'linear-gradient(90deg, rgb(170, 162, 153) 29%, rgb(117, 111, 105) 78%)',\r\n    green: 'linear-gradient(90deg, rgb(79, 214, 79) 29%, rgb(41, 158, 37) 78%)',\r\n    pink: 'linear-gradient(90deg, rgb(224, 131, 204) 29%, rgb(238, 89, 218) 78%)',\r\n    purple: 'linear-gradient(90deg, rgb(177, 128, 240) 29%, rgb(153, 67, 233) 78%)',\r\n    red: 'linear-gradient(90deg, rgb(236, 92, 73) 29%, rgb(243, 62, 62) 78%)',\r\n    white: 'linear-gradient(90deg, rgb(230, 230, 230) 29%, rgb(219, 209, 209) 78%)',\r\n    yellow: 'linear-gradient(90deg, rgb(241, 233, 111) 29%, rgb(228, 216, 45) 78%)'\r\n}\r\n\r\nconst Pokecard = ({pokemon, history}) => {\r\n\r\nconst [inList, setInList] = useState(false)\r\n\r\nuseEffect(() => {\r\n    setInList(isPokemonInList(pokemon))\r\n},[])\r\n\r\nconst addPokemon = (e,pokemon) => {\r\n    e.preventDefault()\r\n    if(!localStorage.getItem('pokemons')){\r\n        localStorage.setItem('pokemons',JSON.stringify([{id: pokemon.id, name: pokemon.name}]))\r\n        setInList(true)\r\n    }else{\r\n        let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n        const isPokemonInList = pokemons.find(poke => poke.id === pokemon.id)\r\n        if(!isPokemonInList){\r\n            pokemons = [...pokemons, {id: pokemon.id, name: pokemon.name}] \r\n            localStorage.setItem('pokemons', [JSON.stringify(pokemons)])\r\n            setInList(true)\r\n        }else{\r\n            alert('Pokemon already in list')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst removePokemon = (e,pokemon) => {\r\n    e.preventDefault()\r\n    if(!localStorage.getItem('pokemons')){\r\n        localStorage.setItem('pokemons',JSON.stringify([{id: pokemon.id, name: pokemon.name}]))\r\n    }else{\r\n        let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n        const isPokemonInList = pokemons.find(poke => poke.id === pokemon.id)\r\n        if(isPokemonInList){\r\n            pokemons = pokemons.filter(item => item.id !== pokemon.id)\r\n            localStorage.setItem('pokemons', [JSON.stringify(pokemons)])\r\n            setInList(false)\r\n        }else{\r\n            alert('Pokemon is not in list')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst isPokemonInList = (pokemon) => {\r\n    let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n    if(pokemons){\r\n        const isPokemon = pokemons.find(poke => poke.id === pokemon.id)\r\n        return isPokemon ? true : false\r\n    }\r\n    return false\r\n}\r\n\r\nconst checkDescriptionLength = (string) => {\r\n    \r\n    const limit = 120\r\n\r\n    if(string.length > limit){\r\n        return `${string.slice(0,limit)}...`\r\n    }\r\n\r\n    return string\r\n}\r\n\r\nconst clearList = (e) => {\r\n    e.preventDefault()\r\n    localStorage.clear()\r\n}\r\n\r\n\r\n\r\nreturn ( \r\n        <div className='pokecard' style={{background: COLORS[`${pokemon.species.color.name}`]}}>\r\n                <div className='poke-top'>\r\n                    <h2 className='poke-title'  >{pokemon.name}</h2>\r\n                    <h4 className='poke-number'>{pokemon.id}</h4>\r\n                </div>\r\n                    <img className='poke-image' src={pokemon.sprites.front_default} alt={pokemon.name}/>\r\n                <div className='poke-text'>\r\n                    <h4 className='poke-types'>{pokemon.types.map((type,i) => (<span key={i} className='poke-type' style={{border:`2px solid ${pokemon.species.color.name === 'white' ? 'black' : pokemon.species.color.name}`}}>{type.type.name}</span>))}</h4>\r\n                    <p className='poke-description'>{checkDescriptionLength(pokemon.species.flavor_text_entries[1].flavor_text)}</p>\r\n                </div>\r\n                <div className='btn-group'>\r\n                    <Link className='btn-card btn-info' to={`/pokemon/${pokemon.id}`}>Info</Link>\r\n                    {inList\r\n                    ?   <button  className='btn-card btn-release' onClick={(e) => removePokemon(e,pokemon)}>Release</button> \r\n                    : <button  className='btn-card btn-add' onClick={(e) => addPokemon(e,pokemon)}>Catch</button> }\r\n                   \r\n                    \r\n                </div>\r\n                {/* <button onClick={(e) => clearList(e)}>Clear</button> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pokecard;","E:\\projects\\react\\poketeca\\src\\screens\\HomeScreen.js",["74","75","76","77"],"E:\\projects\\react\\poketeca\\src\\components\\searchbox\\SearchBox.js",["78"],"import React, { useState } from 'react';\r\nimport './SearchBox.css'\r\nimport { searchPokemons } from '../../core/apiCore';\r\n\r\nconst SearchBox = ({history, placedKeyword=''}) => {\r\n\r\n    const [keyword, setKeyword] = useState(placedKeyword)\r\n\r\n    const handleSearch = () => {\r\n        history.push(`/search/${keyword}`)\r\n    }\r\n\r\n    const onKeyPress = (e) => {\r\n        if(e.which === 13) {\r\n            handleSearch()\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className='search-box'>\r\n            <input className='search' placeholder='Search by name...' type='text' name='search' value={keyword} onKeyPress={(e) => onKeyPress(e)} onChange={(e) => setKeyword(e.target.value)}/>\r\n            <button onClick={() => handleSearch()} className='search-btn' type='submit'><i className='fa fa-search' aria-hidden='true'></i></button>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default SearchBox;","E:\\projects\\react\\poketeca\\src\\screens\\MyPokemonsScreen.js",[],"E:\\projects\\react\\poketeca\\src\\screens\\ProfileScreen.js",[],"E:\\projects\\react\\poketeca\\src\\screens\\SearchScreen.js",["79"],"E:\\projects\\react\\poketeca\\src\\screens\\PokemonScreen.js",["80"],"import React, { useState, useEffect } from 'react'\r\nimport { getPokemonById } from '../core/apiCore'\r\n\r\nconst PokemonScreen = ({match}) => {\r\n    const pokemonId = match.params.id\r\n    const [pokemon, setPokemon] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        \r\n        getPokemonById(pokemonId, setPokemon).then(result => setLoading(false))\r\n    },[match])\r\n\r\n\r\n\r\n    return ( \r\n        <>\r\n            {loading ? 'loading' : (\r\n                <>\r\n                <div className='pokemon-wrapper'>\r\n                    <div className='pokemon-top'>\r\n                        <div className='pokemon-side_description'>\r\n                            <h2 className='pokemon-side_description--title'>{pokemon.name}</h2>\r\n                            <h4 className='pokemon-side_description--subtitle'>#{pokemon.id}</h4>\r\n                            <div className='pokemon-side_description--type'>{pokemon.types && pokemon.types.map((type,i) => (<span key={i}>{type.type.name}</span>))}</div>\r\n                        </div>\r\n                        <img className='pokemon-image' src={pokemon.sprites && pokemon.sprites.front_default} alt={pokemon.name}/>\r\n                    </div>\r\n                    <div className='pokemon-description'>{pokemon.species && pokemon.species.flavor_text_entries[1].flavor_text}</div>\r\n                    <div className='pokemon-stats'>\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                </>\r\n            \r\n            )}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default PokemonScreen;","E:\\projects\\react\\poketeca\\src\\screens\\MyTeamsScreen.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":25,"column":3,"nodeType":"93","endLine":25,"endColumn":5,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":84,"column":7,"nodeType":"87","messageId":"88","endLine":84,"endColumn":16},{"ruleId":"85","severity":1,"message":"96","line":2,"column":43,"nodeType":"87","messageId":"88","endLine":2,"endColumn":56},{"ruleId":"85","severity":1,"message":"97","line":2,"column":58,"nodeType":"87","messageId":"88","endLine":2,"endColumn":72},{"ruleId":"85","severity":1,"message":"98","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":40,"column":8,"nodeType":"93","endLine":40,"endColumn":13,"suggestions":"100"},{"ruleId":"85","severity":1,"message":"97","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":24},{"ruleId":"91","severity":1,"message":"101","line":17,"column":8,"nodeType":"93","endLine":17,"endColumn":24,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":12,"column":7,"nodeType":"93","endLine":12,"endColumn":14,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["105"],["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokemon'. Either include it or remove the dependency array. If 'setInList' needs the current value of 'pokemon', you can also switch to useReducer instead of useState and read 'pokemon' in the reducer.","ArrayExpression",["107"],"'clearList' is assigned a value but never used.","'getMyPokemons' is defined but never used.","'searchPokemons' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPokemons'. Either include it or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'pokemonId'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"Update the dependencies array to be: [pokemon]",{"range":"119","text":"120"},"Update the dependencies array to be: [loadPokemons, url]",{"range":"121","text":"122"},"Update the dependencies array to be: [history, keyword, match]",{"range":"123","text":"124"},"Update the dependencies array to be: [match, pokemonId]",{"range":"125","text":"126"},[1138,1140],"[pokemon]",[1222,1227],"[loadPokemons, url]",[579,595],"[history, keyword, match]",[401,408],"[match, pokemonId]"]