[{"E:\\projects\\react\\poketeca\\src\\reportWebVitals.js":"1","E:\\projects\\react\\poketeca\\src\\App.js":"2","E:\\projects\\react\\poketeca\\src\\core\\apiCore.js":"3","E:\\projects\\react\\poketeca\\src\\index.js":"4","E:\\projects\\react\\poketeca\\src\\components\\navbar\\Navbar.js":"5","E:\\projects\\react\\poketeca\\src\\components\\navbar\\MenuItems.js":"6","E:\\projects\\react\\poketeca\\src\\components\\navbar\\Button.js":"7","E:\\projects\\react\\poketeca\\src\\components\\pokecard\\Pokecard.js":"8","E:\\projects\\react\\poketeca\\src\\screens\\HomeScreen.js":"9","E:\\projects\\react\\poketeca\\src\\components\\searchbox\\SearchBox.js":"10","E:\\projects\\react\\poketeca\\src\\screens\\MyPokemonsScreen.js":"11","E:\\projects\\react\\poketeca\\src\\screens\\ProfileScreen.js":"12","E:\\projects\\react\\poketeca\\src\\screens\\SearchScreen.js":"13","E:\\projects\\react\\poketeca\\src\\screens\\PokemonScreen.js":"14","E:\\projects\\react\\poketeca\\src\\screens\\MyTeamsScreen.js":"15"},{"size":362,"mtime":1606718414823,"results":"16","hashOfConfig":"17"},{"size":1049,"mtime":1607576110225,"results":"18","hashOfConfig":"17"},{"size":2244,"mtime":1607575712278,"results":"19","hashOfConfig":"17"},{"size":497,"mtime":1607127675081,"results":"20","hashOfConfig":"17"},{"size":1021,"mtime":1607194344869,"results":"21","hashOfConfig":"17"},{"size":434,"mtime":1607194374822,"results":"22","hashOfConfig":"17"},{"size":708,"mtime":1607193966340,"results":"23","hashOfConfig":"17"},{"size":4528,"mtime":1607338476138,"results":"24","hashOfConfig":"17"},{"size":2325,"mtime":1607574934156,"results":"25","hashOfConfig":"17"},{"size":1071,"mtime":1607576346835,"results":"26","hashOfConfig":"17"},{"size":889,"mtime":1607575454269,"results":"27","hashOfConfig":"17"},{"size":145,"mtime":1607189617663,"results":"28","hashOfConfig":"17"},{"size":1562,"mtime":1607576359628,"results":"29","hashOfConfig":"17"},{"size":1740,"mtime":1607574450160,"results":"30","hashOfConfig":"17"},{"size":148,"mtime":1607189421501,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gmpyfm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projects\\react\\poketeca\\src\\reportWebVitals.js",[],"E:\\projects\\react\\poketeca\\src\\App.js",[],"E:\\projects\\react\\poketeca\\src\\core\\apiCore.js",[],"E:\\projects\\react\\poketeca\\src\\index.js",[],["65","66"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\Navbar.js",["67"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\MenuItems.js",[],["68","69"],"E:\\projects\\react\\poketeca\\src\\components\\navbar\\Button.js",[],"E:\\projects\\react\\poketeca\\src\\components\\pokecard\\Pokecard.js",["70","71"],"import React,{ useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Pokecard.css';\r\n\r\n\r\nconst COLORS = {\r\n    black: 'linear-gradient(90deg, rgb(112, 109, 107) 29%, rgb(71, 68, 68) 78%)',\r\n    blue: 'linear-gradient(90deg, rgb(87, 142, 230) 29%, rgb(43, 95, 238) 78%)',\r\n    brown: 'linear-gradient(90deg, rgb(218, 144, 75) 29%, rgb(202, 115, 34) 78%)',\r\n    gray: 'linear-gradient(90deg, rgb(170, 162, 153) 29%, rgb(117, 111, 105) 78%)',\r\n    green: 'linear-gradient(90deg, rgb(79, 214, 79) 29%, rgb(41, 158, 37) 78%)',\r\n    pink: 'linear-gradient(90deg, rgb(224, 131, 204) 29%, rgb(238, 89, 218) 78%)',\r\n    purple: 'linear-gradient(90deg, rgb(177, 128, 240) 29%, rgb(153, 67, 233) 78%)',\r\n    red: 'linear-gradient(90deg, rgb(236, 92, 73) 29%, rgb(243, 62, 62) 78%)',\r\n    white: 'linear-gradient(90deg, rgb(230, 230, 230) 29%, rgb(219, 209, 209) 78%)',\r\n    yellow: 'linear-gradient(90deg, rgb(241, 233, 111) 29%, rgb(228, 216, 45) 78%)'\r\n}\r\n\r\nconst Pokecard = ({pokemon, history}) => {\r\n\r\nconst [inList, setInList] = useState(false)\r\n\r\nuseEffect(() => {\r\n    setInList(isPokemonInList(pokemon))\r\n},[])\r\n\r\nconst addPokemon = (e,pokemon) => {\r\n    e.preventDefault()\r\n    if(!localStorage.getItem('pokemons')){\r\n        localStorage.setItem('pokemons',JSON.stringify([{id: pokemon.id, name: pokemon.name}]))\r\n        setInList(true)\r\n    }else{\r\n        let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n        const isPokemonInList = pokemons.find(poke => poke.id === pokemon.id)\r\n        if(!isPokemonInList){\r\n            pokemons = [...pokemons, {id: pokemon.id, name: pokemon.name}] \r\n            localStorage.setItem('pokemons', [JSON.stringify(pokemons)])\r\n            setInList(true)\r\n        }else{\r\n            alert('Pokemon already in list')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst removePokemon = (e,pokemon) => {\r\n    e.preventDefault()\r\n    if(!localStorage.getItem('pokemons')){\r\n        localStorage.setItem('pokemons',JSON.stringify([{id: pokemon.id, name: pokemon.name}]))\r\n    }else{\r\n        let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n        const isPokemonInList = pokemons.find(poke => poke.id === pokemon.id)\r\n        if(isPokemonInList){\r\n            pokemons = pokemons.filter(item => item.id !== pokemon.id)\r\n            localStorage.setItem('pokemons', [JSON.stringify(pokemons)])\r\n            setInList(false)\r\n        }else{\r\n            alert('Pokemon is not in list')\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst isPokemonInList = (pokemon) => {\r\n    let pokemons = JSON.parse(localStorage.getItem('pokemons'))\r\n    if(pokemons){\r\n        const isPokemon = pokemons.find(poke => poke.id === pokemon.id)\r\n        return isPokemon ? true : false\r\n    }\r\n    return false\r\n}\r\n\r\nconst checkDescriptionLength = (string) => {\r\n    \r\n    const limit = 120\r\n\r\n    if(string.length > limit){\r\n        return `${string.slice(0,limit)}...`\r\n    }\r\n\r\n    return string\r\n}\r\n\r\nconst clearList = (e) => {\r\n    e.preventDefault()\r\n    localStorage.clear()\r\n}\r\n\r\n\r\n\r\nreturn ( \r\n        <div className='pokecard' style={{background: COLORS[`${pokemon.species.color.name}`]}}>\r\n                <div className='poke-top'>\r\n                    <h2 className='poke-title'  >{pokemon.name}</h2>\r\n                    <h4 className='poke-number'>{pokemon.id}</h4>\r\n                </div>\r\n                    <img className='poke-image' src={pokemon.sprites.front_default} alt={pokemon.name}/>\r\n                <div className='poke-text'>\r\n                    <h4 className='poke-types'>{pokemon.types.map((type,i) => (<span key={i} className='poke-type' style={{border:`2px solid ${pokemon.species.color.name === 'white' ? 'black' : pokemon.species.color.name}`}}>{type.type.name}</span>))}</h4>\r\n                    <p className='poke-description'>{checkDescriptionLength(pokemon.species.flavor_text_entries[1].flavor_text)}</p>\r\n                </div>\r\n                <div className='btn-group'>\r\n                    <Link className='btn-card btn-info' to={`/pokemon/${pokemon.id}`}>Info</Link>\r\n                    {inList\r\n                    ?   <button  className='btn-card btn-release' onClick={(e) => removePokemon(e,pokemon)}>Release</button> \r\n                    : <button  className='btn-card btn-add' onClick={(e) => addPokemon(e,pokemon)}>Catch</button> }\r\n                   \r\n                    \r\n                </div>\r\n                {/* <button onClick={(e) => clearList(e)}>Clear</button> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pokecard;","E:\\projects\\react\\poketeca\\src\\screens\\HomeScreen.js",["72","73","74","75","76","77"],"E:\\projects\\react\\poketeca\\src\\components\\searchbox\\SearchBox.js",["78"],"E:\\projects\\react\\poketeca\\src\\screens\\MyPokemonsScreen.js",[],"E:\\projects\\react\\poketeca\\src\\screens\\ProfileScreen.js",[],"E:\\projects\\react\\poketeca\\src\\screens\\SearchScreen.js",["79","80"],"E:\\projects\\react\\poketeca\\src\\screens\\PokemonScreen.js",["81","82"],"E:\\projects\\react\\poketeca\\src\\screens\\MyTeamsScreen.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"83","replacedBy":"91"},{"ruleId":"85","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":25,"column":3,"nodeType":"95","endLine":25,"endColumn":5,"suggestions":"96"},{"ruleId":"87","severity":1,"message":"97","line":84,"column":7,"nodeType":"89","messageId":"90","endLine":84,"endColumn":16},{"ruleId":"87","severity":1,"message":"98","line":2,"column":43,"nodeType":"89","messageId":"90","endLine":2,"endColumn":56},{"ruleId":"87","severity":1,"message":"99","line":2,"column":58,"nodeType":"89","messageId":"90","endLine":2,"endColumn":72},{"ruleId":"87","severity":1,"message":"100","line":2,"column":73,"nodeType":"89","messageId":"90","endLine":2,"endColumn":86},{"ruleId":"87","severity":1,"message":"101","line":2,"column":87,"nodeType":"89","messageId":"90","endLine":2,"endColumn":110},{"ruleId":"87","severity":1,"message":"102","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":13},{"ruleId":"93","severity":1,"message":"103","line":40,"column":8,"nodeType":"95","endLine":40,"endColumn":13,"suggestions":"104"},{"ruleId":"87","severity":1,"message":"99","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":24},{"ruleId":"93","severity":1,"message":"105","line":32,"column":16,"nodeType":"106","endLine":34,"endColumn":6},{"ruleId":"93","severity":1,"message":"103","line":34,"column":8,"nodeType":"95","endLine":34,"endColumn":33,"suggestions":"107"},{"ruleId":"87","severity":1,"message":"108","line":2,"column":22,"nodeType":"89","messageId":"90","endLine":2,"endColumn":39},{"ruleId":"93","severity":1,"message":"109","line":16,"column":7,"nodeType":"95","endLine":16,"endColumn":14,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["111"],["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pokemon'. Either include it or remove the dependency array. If 'setInList' needs the current value of 'pokemon', you can also switch to useReducer instead of useState and read 'pokemon' in the reducer.","ArrayExpression",["113"],"'clearList' is assigned a value but never used.","'getMyPokemons' is defined but never used.","'searchPokemons' is defined but never used.","'firstPokemons' is defined but never used.","'getPokemonDetailsInBulk' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'loadPokemons'. Either include it or remove the dependency array.",["114"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["115"],"'getPokemonDetails' is defined but never used.","React Hook useEffect has a missing dependency: 'pokemonId'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},"Update the dependencies array to be: [pokemon]",{"range":"125","text":"126"},"Update the dependencies array to be: [loadPokemons, url]",{"range":"127","text":"128"},"Update the dependencies array to be: [history, match, keyword, loadPokemons]",{"range":"129","text":"130"},"Update the dependencies array to be: [match, pokemonId]",{"range":"131","text":"132"},[1138,1140],"[pokemon]",[1415,1420],"[loadPokemons, url]",[983,1008],"[history, match, keyword, loadPokemons]",[533,540],"[match, pokemonId]"]